{"version":3,"sources":["context.js","components/SearchForm.js","components/Movies.js","components/Home.js","components/SingleMovie.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","isLoading","setIsLoading","query","setQuery","data","setData","fetchData","a","fetch","response","json","Response","console","log","useEffect","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","Error","Movies","movies","Search","map","movie","id","imdbID","poster","Poster","title","Title","year","Year","to","src","alt","Home","SingleMovie","singleMovie","setSingleMovie","useParams","fetchMovie","plot","Plot","director","Director","runtime","Runtime","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e614ba.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [query, setQuery] = useState(\"superman\");\r\n  const [data, setData] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `https://www.omdbapi.com/?apikey=a931948e&s=${query}`\r\n      );\r\n      const data = await response.json();\r\n      if (data.Response === \"True\") {\r\n        setData(data);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    console.log(data);\r\n  }, [query]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ isLoading, setIsLoading, data, query, setQuery }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nconst SearchForm = () => {\r\n  const { query, setQuery, data } = useGlobalContext();\r\n\r\n  return (\r\n    <form className=\"searchForm\" onSubmit={(e) => e.preventDefault()}>\r\n      <h2>Search Movies</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      {!data.Response && <div className=\"error\">{data.Error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst url =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\r\n\r\nconst Movies = () => {\r\n  const { isLoading, data } = useGlobalContext();\r\n  const movies = data.Search;\r\n\r\n  if (isLoading) {\r\n    return <div className=\"loading\"></div>;\r\n  }\r\n  return (\r\n    <section className=\"movies\">\r\n      {movies.map((movie) => {\r\n        const { imdbID: id, Poster: poster, Title: title, Year: year } = movie;\r\n        return (\r\n          <Link to={`/movies/${id}`} key={id} className=\"movie\">\r\n            <div>\r\n              <img src={poster === \"N/A\" ? url : poster} alt={title} />\r\n              <div className=\"info\">\r\n                <h4>{title}</h4>\r\n                <p>{year}</p>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport Movies from \"./Movies\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <SearchForm />\r\n      <Movies />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nconst url =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\r\n\r\nconst SingleMovie = () => {\r\n  const [singleMovie, setSingleMovie] = useState([]);\r\n  const { isLoading, setIsLoading } = useGlobalContext();\r\n  const { id } = useParams();\r\n\r\n  const fetchMovie = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `https://www.omdbapi.com/?apikey=a931948e&i=${id}`\r\n      );\r\n      const data = await response.json();\r\n      setSingleMovie(data);\r\n      setIsLoading(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovie();\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <div className=\"loading\"></div>;\r\n  }\r\n  if (singleMovie.Response === \"False\") {\r\n    return (\r\n      <div className=\"errorPage\">\r\n        <h1>{singleMovie.Error}</h1>\r\n        <Link to=\"/\" id=\"btn\">\r\n          back to movies\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n  const {\r\n    Poster: poster,\r\n    Title: title,\r\n    Plot: plot,\r\n    Year: year,\r\n    Director: director,\r\n    Runtime: runtime,\r\n  } = singleMovie;\r\n  return (\r\n    <section className=\"singleMovie\">\r\n      <img src={poster === \"N/A\" ? url : poster} alt={title} />\r\n      <div className=\"singleMovieInfo\">\r\n        <h1>{title}</h1>\r\n        <h2>{year}</h2>\r\n        <p>{plot}</p>\r\n        <h3>Directed by: {director}</h3>\r\n        <h3>Runtime: {runtime}</h3>\r\n        <Link to=\"/\" id=\"btn\">\r\n          Back to movies\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SingleMovie;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport SingleMovie from \"./components/SingleMovie\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Home />\n      </Route>\n      <Route path=\"/movies/:id\" children={<SingleMovie />} />\n    </Switch>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppProvider } from \"./context\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}